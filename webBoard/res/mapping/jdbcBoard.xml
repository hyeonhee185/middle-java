<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	


<!-- 이 문서는 ibatis에서 처리할 SQL문을 작성하는 문서입니다. -->
<sqlMap namespace="jdbcBoard">
<!-- 	<resultMap class="noticeBoardVO" id="noticeBoardMap"> -->
<!-- 		<result property="noticeId" column="NOTICE_ID"/> -->
<!-- 		<result property="adminId" column="ADMIN_ID"/> -->
<!-- 		<result property="noticeTitle" column="NOTICE_TITLE"/> -->
<!-- 		<result property="noticeDate" column="NOTICE_DATE"/> -->
<!-- 		<result property="noticeContent" column="NOTICE_CONTENT"/> -->
<!-- 		<result property="noticeCount" column="NOTICE_COUNT"/> -->
<!-- 		<result property="noticeDrop" column="NOTICE_DROP"/> -->
<!-- 	</resultMap> -->
	<!-- 
		이 부분에 처리할 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
		
		사용할 수 있는 기본 태그들...
		<select> select문 작성 </select>
		<insert> insert문 작성 </insert>
		<update> update문 작성 </update>
		<delete> delete문 작성 </delete>
		...
	 -->

	<!-- 
		id속성 ==> 실행할 태그를 java소스에서 호출할 때 사용되는 이름으로
				위의 sqlMap태그의 namespace속성값과 연결해서 사용한다.
				(예: 'lprod.insertLprod')
		parameterClass속성 ==> SQL문에 사용될 데이터가 저장된 객체를 기술한다.
				(보통 VO클래스, 자바의 기본자료형이름, Map객체등이 사용된다.)
				(VO클래스 등을 기술할 때는 해당 클래스의 전체 이름을 기술해야 한다.)
				(parameterClass에 typeAlias에서 지정한 alias명을 사용할 수 있다.)
	 -->
	<insert id="insertBoard" parameterClass="jdbcBoardVO">
		
		insert into jdbc_board (board_no, board_title, board_writer, board_date, board_cnt, board_content)
		values( board_seq.nextVal, #board_title#, #board_writer#, sysdate, 0, #board_content# )
	
	</insert>
	
	<update id="updateBoard" parameterClass="jdbcBoardVO">
		update jdbc_board set board_title = #board_title# , board_content = #board_content#, board_date = sysdate where board_no = #board_no#
	</update>
	
	<!-- parameterClass에 설정되는 값이 단일값이면 SQL문에 이 값을 나타내는 변수명은
		사용자가 임의로 지정할 수 있다. -->
	<delete id="deleteBoard" parameterClass="int">
 		
 		delete from jdbc_board where board_no = #board_no#
	</delete>
	
	<!-- 
		resultClass속성 ==> select문을 처리한 결과를 저장할 VO클래스나 자바의 기본자료형 또는
				Map객체를 지정한다.
			==> select결과가 여러개이면 자동으로  List에 담아준다.
				그래서 결과가 여러개일 경우에도 resultClass에 지정하는 것은
				1개의 레코드가 저장될 클래스나 자료형이름을 지정하면 된다.
	 -->

	<select id="getAllBoardList" resultClass="jdbcBoardVO">
		
		select board_no, board_title, board_writer, to_char(board_date, 'YYYY-MM-DD') board_date, board_cnt, board_content 
					from jdbc_board order by board_no desc 
					
	</select>
	
	<select id="getSearchBoardList" resultClass="jdbcBoardVO">
		
		select board_no, board_title, board_writer, to_char(board_date, 'YYYY-MM-DD') board_date, board_cnt, board_content 
					from jdbc_board where board_title like '%'||#board_title#||'%' order by board_no desc 
	</select>
	
	<select id="getBoard" parameterClass="int" resultClass="jdbcBoardVO">
	
		select board_no, board_title, board_writer,to_char(board_date, 'YYYY-MM-DD') board_date, board_cnt, board_content 
					from jdbc_board where board_no = #board_no#
	</select>
	
	<update id="setCountIncrement" parameterClass="int">
		update jdbc_board set  board_cnt = board_cnt + 1 
		where board_no = #board_no#
	</update>
	
</sqlMap>